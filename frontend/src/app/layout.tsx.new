'use client';

import Link from 'next/link';
import Image from 'next/image';
import { cn } from '@/lib/utils';
import { motion } from 'framer-motion';
import { useEffect, useState } from 'react';
import { Button } from '@/components/ui/button';
import { UserProvider } from '../contexts/UserContext';
import { Sheet, SheetContent, SheetTitle, SheetTrigger } from '@/components/ui/sheet';
import { Menu, Mountain, User, Ticket, Calendar, Home } from 'lucide-react';
import { Providers } from './providers';

// Types
import type { ElementType } from 'react';

interface NavItemProps {
  href: string;
  icon: ElementType;
  label: string;
}

interface User {
  id: number;
  username: string;
  avatar?: string;
}

// Constants
const NAV_ITEMS = [
  { href: '/', label: 'Home', icon: Home },
  { href: '/events', label: 'Events', icon: Calendar },
  { href: '/my-tickets', label: 'My Tickets', icon: Ticket },
];

export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  const [isScrolled, setIsScrolled] = useState(false);
  const [user, setUser] = useState<User | null>(null);

  useEffect(() => {
    const handleScroll = () => setIsScrolled(window.scrollY > 10);
    window.addEventListener('scroll', handleScroll);
    return () => window.removeEventListener('scroll', handleScroll);
  }, []);

  const handleLogout = () => {
    setUser(null);
    // Add your logout logic here
  };

  return (
    <html lang="en">
      <body className="min-h-screen bg-gradient-to-b from-gray-900 via-gray-800 to-gray-900 text-white">
        <Providers>
          <UserProvider>
            <div className="relative min-h-screen w-full">
              {/* Background Effects */}
              <div className="fixed inset-0 overflow-hidden pointer-events-none">
                <div className="absolute top-1/4 right-1/4 w-64 h-64 bg-purple-500/10 rounded-full filter blur-3xl animate-pulse" />
                <div className="absolute top-3/4 left-1/2 w-64 h-64 bg-pink-500/10 rounded-full filter blur-3xl animate-pulse delay-2000" />
              </div>

              {/* Main Layout */}
              <div className="relative flex min-h-screen w-full flex-col">
                <motion.header
                  className={cn(
                    'fixed top-0 z-50 w-full transition-all duration-300',
                    isScrolled
                      ? 'bg-slate-950/80 backdrop-blur-xl border-b border-purple-800/20 shadow-lg shadow-purple-500/10'
                      : 'bg-transparent'
                  )}
                  initial={{ y: -100 }}
                  animate={{ y: 0 }}
                  transition={{ duration: 0.5, ease: "easeOut" }}
                >
                  <div className="container mx-auto flex h-16 items-center justify-between px-4 sm:px-6">
                    {/* Mobile Menu */}
                    <Sheet>
                      <SheetTrigger asChild>
                        <Button 
                          size="icon" 
                          variant="ghost" 
                          className="sm:hidden hover:bg-purple-500/10"
                        >
                          <Menu className="h-5 w-5" />
                        </Button>
                      </SheetTrigger>
                      <SheetContent 
                        side="left" 
                        className="bg-slate-950/95 border-r border-purple-800/20 backdrop-blur-xl"
                      >
                        <SheetTitle className="text-xl font-bold bg-clip-text text-transparent bg-gradient-to-r from-purple-400 to-blue-300">
                          Navigation
                        </SheetTitle>
                        <div className="flex flex-col h-full mt-8">
                          <div className="flex items-center gap-3 p-4 rounded-lg bg-gradient-to-r from-purple-900/20 to-blue-900/20 border border-purple-500/10">
                            <div className="h-12 w-12 rounded-lg bg-gradient-to-r from-purple-600 to-blue-500 flex items-center justify-center shadow-lg shadow-purple-500/20">
                              <Mountain className="h-6 w-6 text-white" />
                            </div>
                            <span className="text-2xl font-bold bg-clip-text text-transparent bg-gradient-to-r from-purple-400 to-blue-300">
                              Event Platform
                            </span>
                          </div>
                          <nav className="flex-1 p-4 space-y-3 mt-6">
                            {NAV_ITEMS.map((item) => (
                              <NavItem key={item.href} {...item} />
                            ))}
                          </nav>
                        </div>
                      </SheetContent>
                    </Sheet>

                    {/* Desktop Brand */}
                    <Link href="/" className="flex items-center gap-2">
                      <div className="hidden sm:flex items-center justify-center h-10 w-10 rounded-lg bg-gradient-to-r from-purple-600 to-blue-500">
                        <Mountain className="h-5 w-5 text-white" />
                      </div>
                      <span className="text-xl font-bold bg-clip-text text-transparent bg-gradient-to-r from-purple-400 to-blue-300">
                        Event Platform
                      </span>
                    </Link>

                    {/* Desktop Navigation */}
                    <nav className="hidden sm:flex items-center gap-4">
                      {NAV_ITEMS.map((item) => (
                        <Link
                          key={item.href}
                          href={item.href}
                          className="relative px-4 py-2 text-gray-300 hover:text-white transition-colors text-sm font-medium group"
                        >
                          <span className="flex items-center gap-2">
                            <item.icon className="h-4 w-4" />
                            {item.label}
                          </span>
                          <div className="absolute inset-0 bg-gradient-to-r from-purple-600/0 via-purple-600/10 to-blue-500/0 opacity-0 group-hover:opacity-100 transition-opacity duration-300 rounded-lg -z-10" />
                        </Link>
                      ))}
                    </nav>

                    {/* Auth Buttons */}
                    <div className="flex items-center gap-3">
                      {user ? (
                        <div className="flex items-center gap-3">
                          <div className="hidden sm:flex items-center gap-3">
                            <div className="p-1 rounded-full bg-gradient-to-r from-purple-600 to-blue-500">
                              <div className="h-8 w-8 rounded-full bg-slate-950 flex items-center justify-center overflow-hidden">
                                {user.avatar ? (
                                  <Image
                                    src={user.avatar}
                                    alt={user.username}
                                    width={32}
                                    height={32}
                                    className="h-full w-full rounded-full object-cover"
                                  />
                                ) : (
                                  <User className="h-4 w-4 text-gray-300" />
                                )}
                              </div>
                            </div>
                            <span className="text-sm font-medium text-gray-300">
                              {user.username}
                            </span>
                          </div>
                          <Button
                            onClick={handleLogout}
                            variant="outline"
                            className="border-purple-800/20 bg-slate-950/50 hover:bg-purple-900/20 hover:text-white transition-all duration-300"
                          >
                            Logout
                          </Button>
                        </div>
                      ) : (
                        <div className="flex gap-3">
                          <Button
                            asChild
                            variant="outline"
                            className="border-purple-800/20 bg-slate-950/50 hover:bg-purple-900/20 hover:text-white transition-all duration-300"
                          >
                            <Link href="/login">Login</Link>
                          </Button>
                          <Button
                            asChild
                            className="bg-gradient-to-r from-purple-600 to-blue-500 hover:from-purple-700 hover:to-blue-600 text-white shadow-lg shadow-purple-500/25"
                          >
                            <Link href="/register">Register</Link>
                          </Button>
                        </div>
                      )}
                    </div>
                  </div>
                </motion.header>

                <main className="flex-grow pt-16 pb-12">
                  <motion.div
                    initial={{ opacity: 0 }}
                    animate={{ opacity: 1 }}
                    transition={{ duration: 0.5 }}
                    className="container mx-auto px-4 sm:px-6 py-6"
                  >
                    {children}
                  </motion.div>
                </main>

                <footer className="bg-gray-900/50 border-t border-gray-800 backdrop-blur-md">
                  <div className="container mx-auto px-4 sm:px-6 py-12">
                    <p className="text-gray-500 text-sm text-center">
                      Â© {new Date().getFullYear()} Event Platform. All rights reserved.
                    </p>
                  </div>
                </footer>
              </div>
            </div>
          </UserProvider>
        </Providers>
      </body>
    </html>
  );
}

/* Reusable Components */
function NavItem({ href, icon: Icon, label }: NavItemProps) {
  return (
    <Link
      href={href}
      className="group flex items-center gap-3 px-4 py-3 rounded-xl text-gray-300 hover:bg-gradient-to-r from-purple-900/20 to-blue-900/20 hover:border-purple-500/10 hover:text-white transition-all duration-300"
    >
      <div className="p-2 rounded-lg bg-gradient-to-r from-purple-600/10 to-blue-500/10 group-hover:from-purple-600 group-hover:to-blue-500 transition-all duration-300">
        <Icon className="h-5 w-5" />
      </div>
      <span className="font-medium">{label}</span>
    </Link>
  );
}
